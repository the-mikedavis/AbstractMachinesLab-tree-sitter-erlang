================================================================================
name attribute
================================================================================

-module(name).

--------------------------------------------------------------------------------

(source_file
  (module_name
    (atom)))

================================================================================
export attribute
================================================================================

-export([hello/0, what/1]).
-export_type([t/0, t_aux/1]).

--------------------------------------------------------------------------------

(source_file
  (module_export
    (atom)
    (integer)
    (atom)
    (integer))
  (module_export
    (atom)
    (integer)
    (atom)
    (integer)))

================================================================================
dialyzer attribute
================================================================================

-dialyzer([{noreturn, [hello/0, what/1]}]).

--------------------------------------------------------------------------------

(source_file
  (module_attribute
    (atom)
    (expr_list
      (tuple
        (atom)
        (expr_list
          (expr_op
            (atom)
            (integer))
          (expr_op
            (atom)
            (integer)))))))

================================================================================
record creation
================================================================================

-record(beam_file, {module               :: module(),
                    labeled_exports = [] :: [beam_lib:labeled_entry()],
                    attributes      = [] :: [beam_lib:attrib_entry()],
                    compile_info    = [] :: [beam_lib:compinfo_entry()],
                    code            = [] :: [#function{}]}).

--------------------------------------------------------------------------------

(source_file
  (record_declaration
    (atom)
    (expr_record_definition
      (atom)
      (type_expression
        (type_application
          (atom))))
    (expr_record_definition
      (atom)
      (expr_list)
      (type_expression
        (type_list
          (type_expression
            (type_application
              (atom)
              (atom))))))
    (expr_record_definition
      (atom)
      (expr_list)
      (type_expression
        (type_list
          (type_expression
            (type_application
              (atom)
              (atom))))))
    (expr_record_definition
      (atom)
      (expr_list)
      (type_expression
        (type_list
          (type_expression
            (type_application
              (atom)
              (atom))))))
    (expr_record_definition
      (atom)
      (expr_list)
      (type_expression
        (type_list
          (type_expression
            (type_record
              (atom))))))))
